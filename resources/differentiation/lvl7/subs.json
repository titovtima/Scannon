{
  "substitutions": [
    {
      "origin": "A->B",
      "target": "!A|B",
      "scoreForHit": -30,
      "scoreForSkip": 10
    },
    {
      "origin": "!A|B",
      "target": "A->B",
      "scoreForHit": -30,
      "scoreForSkip": 10
    },
    {
      "origin": "A->B",
      "target": "A|B",
      "scoreForHit": 10,
      "scoreForSkip": -30
    },
    {
      "origin": "A|B",
      "target": "A->B",
      "scoreForHit": 10,
      "scoreForSkip": -30
    },
    {
      "origin": "A->B",
      "target": "!A->!B",
      "scoreForHit": 15,
      "scoreForSkip": -25
    },
    {
      "origin": "!A->!B",
      "target": "A->B",
      "scoreForHit": 15,
      "scoreForSkip": -25
    },
    {
      "origin": "A->B",
      "target": "A->!B",
      "scoreForHit": 15,
      "scoreForSkip": -25
    },
    {
      "origin": "A->!B",
      "target": "A->B",
      "scoreForHit": 15,
      "scoreForSkip": -25
    },
    {
      "origin": "A->B",
      "target": "!(A&!B)",
      "scoreForHit": -25,
      "scoreForSkip": 15
    },
    {
      "origin": "!(A&!B)",
      "target": "A->B",
      "scoreForHit": -25,
      "scoreForSkip": 15
    },
    {
      "origin": "A->B",
      "target": "!(!A&B)",
      "scoreForHit": 15,
      "scoreForSkip": -25
    },
    {
      "origin": "!(!A&B)",
      "target": "A->B",
      "scoreForHit": 15,
      "scoreForSkip": -25
    },
    {
      "origin": "A->B",
      "target": "A&!B",
      "scoreForHit": 15,
      "scoreForSkip": -25
    },
    {
      "origin": "A&!B",
      "target": "A->B",
      "scoreForHit": 15,
      "scoreForSkip": -25
    },
    {
      "origin": "A->B",
      "target": "!A&B",
      "scoreForHit": 15,
      "scoreForSkip": -25
    },
    {
      "origin": "!A&B",
      "target": "A->B",
      "scoreForHit": 15,
      "scoreForSkip": -25
    }
  ]
}