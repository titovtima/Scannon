{
  "levels": {
    "0": {
      "description_en": "Tutorial",
      "description_ru": "Туториал",
      "instructions_en": "Click on expressions to shoot them.\nShoot only those that are not equal to the previous ones.",
      "instructions_ru": "Нажми на выражение чтобы сбить его.\nСбивай только те выражения которые не равны предыдущим.",
      "autogenerate": false,
      "tutorial": "always",
      "sequences": [
        "/lvl0/seq.json"
      ]
    },
    "1": {
      "description_en": "And, or, not - simple",
      "description_ru": "И, или, не - простой",
      "instructions_en": "\"And\"(∧) return \"true\" if all its arguments are \"true\"\n\"Or\"(∨) returns \"true\" if al least one of its arguments is \"true\"\n\"Not\"(¬) receives only one argument and returns \"true\" if its argument is \"false\"\nFormulas to practice:",
      "instructions_ru": "\"И\"(∧) возвращает \"истину\" если все аргументы истинны\n\"Или\"(∨) возвращает \"истину\" если хотя бы один из аргументов - \"истина\"\n\"Не\"(¬) принимает один аргумент и возвращает \"истину\" если аргумент - \"ложь\"\nПрактикуемые формулы:",
      "autogenerate": false,
      "tutorial": "never",
      "sequences": [
        "/lvl1/seq1.json",
        "/lvl1/seq2.json",
        "/lvl1/seq3.json",
        "/lvl1/seq4.json",
        "/lvl1/seq5.json",
        "/lvl1/seq6.json"
      ],
      "formulas_list": { "rows": [
        [
          { "left": "a∧1", "right": "a" },
          { "left": "a∧0", "right": "0" },
          { "left": "a∧¬a", "right": "0" },
          { "left": "a∧a", "right": "a" }
        ],
        [
          { "left": "a∨0", "right": "a" },
          { "left": "a∨1", "right": "1" },
          { "left": "a∨¬a", "right": "1" },
          { "left": "a∨a", "right": "a" }
        ],
        [],
        [
          { "left": "¬0", "right": "1" },
          { "left": "a∧b", "right": "b∧a" },
          { "left": "(a∧b)∧c", "right": "a∧(b∧c)" }
        ],
        [
          { "left": "¬1", "right": "0" },
          { "left": "a∨b", "right": "b∨a" },
          { "left": "(a∨b)∨c", "right": "a∨(b∨c)" }
        ],
        [],
        [
          { "left": "¬(¬a)", "right": "a" }
        ]
      ]}
    },
    "2": {
      "description_en": "And, or, not - hard",
      "description_ru": "И, или, не - сложный",
      "instructions_en": "De Morgan laws and Absorption laws say this:",
      "instructions_ru": "Законы де Моргана и законы поглощения утверждают что:",
      "autogenerate": false,
      "tutorial": "never",
      "sequences": [
        "/lvl2/seq1.json",
        "/lvl2/seq2.json",
        "/lvl2/seq3.json"
      ],
      "formulas_list": { "rows": [
        [
          { "left": "¬(a∨b)", "right": "¬a∧¬b" },
          { "left": "a∧(a∨b)", "right": "a" }
        ],
        [
          { "left": "¬(a∧b)", "right": "¬a∨¬b" },
          { "left": "a∨(a∧b)", "right": "a" }
        ]
      ]}
    },
    "3": {
      "description_en": "Implication - simple",
      "description_ru": "Импликация - простой",
      "instructions_en": "Implication is a binary operator which returns \"true\"\nunless its first argument is true and its second argument is false.\nFormulas to practice:",
      "instructions_ru": "Импликация - это бинарный логический оператор,\nкоторый возвращает \"истину\" всегда, кроме случая\nкогда его первый аргумент \"истина\" а второй - \"ложь\"\nПрактикуемые формулы:",
      "autogenerate": false,
      "tutorial": "never",
      "sequences": [
        "/lvl3/seq1.json",
        "/lvl3/seq2.json",
        "/lvl3/seq3.json"
      ],
      "formulas_list": { "rows": [
        [
          { "left": "a→b", "right": "¬a∨b" },
          { "left": "1→a", "right": "a" },
          { "left": "a→1", "right": "0" }
        ],
        [
          { "left": "a→b", "right": "¬(a∧¬b)" },
          { "left": "0→a", "right": "1" },
          { "left": "a→0", "right": "¬a" }
        ],
        [],
        [
          { "left": "a→b", "right": "¬b→¬a" },
          { "left": "a→a", "right": "1" },
          { "left": "a→¬a", "right": "¬a" }
        ]
      ]}
    },
    "4": {
      "description_en": "Implication - hard",
      "description_ru": "Импликация - сложный",
      "instructions_en": "More implication properties:",
      "instructions_ru": "Ещё свойства импликации:",
      "autogenerate": false,
      "tutorial": "never",
      "sequences": [
        "/lvl4/seq1.json"
      ],
      "formulas_list": { "rows": [
        [
          { "left": "a∧(a→b)", "right": "a∧b" },
          { "left": "b∧(a→b)", "right": "b" }
        ],
        [
          { "left": "¬a∧(a→b)", "right": "¬a" },
          { "left": "¬b∧(a→b)", "right": "¬b∧¬a" }
        ],
        [],
        [ { "left": "(a∧b)→c", "right": "(a→c)∨(b→c)" } ],
        [ { "left": "a→(b∧c)", "right": "(a→b)∧(a→c)" } ],
        [ { "left": "a→(b∨c)", "right": "(a→b)v(a→c)" } ]
      ]}
    },
    "5": {
      "description_en": "Xor - simple",
      "description_ru": "Исключающее или -\nпростой",
      "instructions_en": "Binary operator \"Xor\"(⊕) returns \"true\"\nif its arguments are not equal to each other\nFormulas to practice:",
      "instructions_ru": "Бинарный оператор \"Исключающее или\"(⊕, \"Xor\")\nвозвращает \"истину\" если его аргументы не равны друг другу\nПрактикуемые формулы:",
      "autogenerate": false,
      "tutorial": "never",
      "sequences": [
        "/lvl5/seq1.json",
        "/lvl5/seq2.json"
      ],
      "formulas_list": { "rows": [
        [
          { "left": "a⊕b", "right": "(¬a∧b)∨(a∧¬b)" }
        ],
        [],
        [
          { "left": "a⊕b", "right": "b⊕a" },
          { "left": "a⊕1", "right": "¬a" },
          { "left": "a⊕a", "right": "0" }
        ],
        [
          { "left": "a⊕b", "right": "¬a⊕¬b" },
          { "left": "a⊕0", "right": "a" },
          { "left": "a⊕¬a", "right": "1" }
        ],
        [],
        [
          { "left": "(a⊕b)⊕c", "right": "a⊕(b⊕c)" },
          { "left": "a", "right": "a⊕b⊕b" },
          { "left": "¬(a⊕b)", "right": "¬a⊕b" }
        ]
      ]}
    },
    "6": {
      "description_en": "Xor - hard",
      "description_ru": "Исключающее или -\nсложный",
      "instructions_en": "A little more about \"xor\":",
      "instructions_ru": "Ещё немного об \"исключающем или\":",
      "autogenerate": false,
      "tutorial": "never",
      "sequences": [
        "/lvl6/seq1.json"
      ],
      "formulas_list": { "rows": [
        [
          { "left": "(a⊕b)∧c", "right": "(a∧c)⊕(b∧c)" }
        ]
      ]}
    }
  }
}